@page "/room/{RoomCode}"
@inject MovieMatch_Blazor.Shared.Services.IAppState appState
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.SignalR.Client 


@if (appState.roomIsValid)
{
    <h3>Lets get ready to rumble @appState.Username</h3>
    <div>
        <h6>Users in lobby</h6>
            <ul id="currentUsers">
                @foreach (var user in appState.Users)
                {
                    <li>@user</li>
                }
            </ul>        
    </div>
}
else
{
    <h3>Looks like that room doesn't exist... or you didn't join from the <a href="/">homepage</a></h3>
}



@code {
    [Parameter]
    public string RoomCode { get; set; }

    private HubConnection hubConnection;
    protected override async Task OnInitializedAsync()
    {
        if (appState.roomIsValid)
        {
            hubConnection = new HubConnectionBuilder()
            .WithUrl(navigationManager.ToAbsoluteUri("/roomhub"))
            .Build();
            //Everytime a user joins, update the list with the current user status
            hubConnection.On<string>("NewUser", (user) =>
            {
                appState.Users.Add(user);
                StateHasChanged();
            });
            //Start the connection and send your relevant information to the hub.
            await hubConnection.StartAsync();
            await hubConnection.SendAsync("register", appState);
        }
    }

    public async ValueTask DisposeAsync()
    {
        await hubConnection.DisposeAsync();
    }
}
